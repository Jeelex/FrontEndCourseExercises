{"mappings":"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","sources":["./src/todo-constructor.js","./src/local-storage.js","./src/dom.js","./src/arrays.js","./src/index.js","./src/btns.js"],"sourcesContent":["export default function Todo(details) {\n\tconst { project, title, description, dueDate, priority } = details;\n\tthis.project = project || \"unknown\";\n\tthis.title = title || \"unknown\";\n\tthis.description = description || \"unknown\";\n\tthis.dueDate = dueDate || \"unknown\";\n\tthis.priority = priority || \"unknown\";\n}","import Todo from \"./todo-constructor.js\";\nimport { addTodo, enableProjectBtns } from \"./btns.js\";\nimport { addProjectToArray, removeProjectFromArray } from \"./arrays.js\";\nimport { changeProjectTitle, render } from \"./dom.js\";\nimport { supermarket, myproject } from \"./index.js\";\n\n// saving library to localStorage\nexport function saveProjectToLocalStorage(projectName, array) {\n\treturn localStorage.setItem(projectName, JSON.stringify(array));\n}\n\n// reload localStorage\nexport function reloadLocalStorage() {\n\tconst table = document.getElementById(\"tasks\");\n\n\tif (localStorage.length === 0 || (localStorage[\"My Project\"] === \"[]\" && localStorage[\"Supermarket\"] === \"[]\")) {\n\t\tconst defaultTodo = new Todo({\n\t\t\tproject: \"My Project\",\n\t\t\ttitle: \"Buy Mouse Pad\",\n\t\t\tdescription: \"Logitech\",\n\t\t\tdueDate: \"2021-08-10\",\n\t\t\tpriority: \"Medium\",\n\t\t});\n\t\taddProjectToArray(defaultTodo, myproject);\n\t\trender(myproject, table);\n\t\tchangeProjectTitle(defaultTodo.project);\n\t\tsaveProjectToLocalStorage(\"My Project\", myproject);\n\t} else {\n\t\tlet myProjectDestringified = JSON.parse(localStorage.getItem(\"My Project\"));\n\t\tlet supermarketDestringified = JSON.parse(localStorage.getItem(\"Supermarket\"));\n\n\t\tconst myArraysDistringified = [myProjectDestringified, supermarketDestringified];\n\n\t\tmyArraysDistringified.forEach((array) => {\n\t\t\tarray.forEach((element) => {\n\t\t\t\tconst previousTodos = new Todo({\n\t\t\t\t\tproject: element.project,\n\t\t\t\t\ttitle: element.title,\n\t\t\t\t\tdescription: element.description,\n\t\t\t\t\tdueDate: element.dueDate,\n\t\t\t\t\tpriority: element.priority,\n\t\t\t\t});\n\n\t\t\t\tif (previousTodos.project === \"My Project\") {\n\t\t\t\t\taddProjectToArray(previousTodos, myproject);\n\t\t\t\t\trender(myproject, table);\n\t\t\t\t\tchangeProjectTitle(element.project);\n\t\t\t\t} else {\n\t\t\t\t\taddProjectToArray(previousTodos, supermarket);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n}\n","import Todo from \"./todo-constructor.js\";\nimport { addTodo, enableProjectBtns } from \"./btns.js\";\nimport { saveProjectToLocalStorage, reloadLocalStorage } from \"./local-storage.js\";\nimport { addProjectToArray, removeProjectFromArray } from \"./arrays.js\";\nimport { supermarket, myproject } from \"./index.js\";\n\nexport function changeProjectTitle(projectName) {\n\tconst projectTitle = document.querySelector(\"#project-title\");\n\tprojectTitle.innerText = projectName;\n}\n\n// rendering new todo from project array to the Dom\nexport function render(array, parentDiv) {\n\tparentDiv.innerHTML = \"\";\n\n\tfor (let i = 0; i < array.length; i++) {\n\t\tlet priorityClass;\n\t\tswitch(array[i].priority){\n\t\tcase \"High\":\n\t\t\tpriorityClass = \"btn-outline-danger\";\n\t\t\tbreak;\n\t\tcase \"Medium\":\n\t\t\tpriorityClass = \"btn-outline-warning\";\n\t\t\tbreak;\n\t\tcase \"Low\":\n\t\t\tpriorityClass = \"btn-outline-dark\";\n\t\t}\n\n\t\tlet row = `\n\t\t<tr class=\"border-0\" data-todo-title=\"${array[i].title}\" data-todo-project=\"${array[i].project}\">\n    <td class=\"px-2\">${array[i].title}</td>\n    <td class=\"px-2\">${array[i].description}</td>\n    <td class=\"px-2\">${array[i].dueDate}</td>\n    <td class=\"px-2 text-center ${priorityClass}\">${array[i].priority}</td>\n    <td><button class=\"mx-1 btn btn-dark edit\">Edit</button></td>\n    <td><button class=\"mx-1 btn btn-danger delete\">Delete</button></td>\n    </tr>\n\t\t`;\n\n\t\tparentDiv.insertAdjacentHTML(\"beforeend\", row);\n\t}\n}","import Todo from \"./todo-constructor.js\";\nimport { addTodo, enableProjectBtns } from \"./btns.js\";\nimport { changeProjectTitle, render } from \"./dom.js\";\nimport { saveProjectToLocalStorage, reloadLocalStorage } from \"./local-storage.js\";\nimport { supermarket, myproject } from \"./index.js\";\n\n\n// adding new projects to the projects array\nexport function addProjectToArray(todo, array) {\n\tarray.push(todo);\n}\n\n// removing project from Array and from the DOM\nexport function removeProjectFromArray() {\n\tconst table = document.getElementById(\"tasks\");\n\n\ttable.addEventListener(\"click\", (e) => {\n\t\tif (!e.target.classList.contains(\"delete\")) {\n\t\t\treturn;\n\t\t}\n\t\te.target.closest(\"tr\").remove();\n\n\t\tlet currentTodoProject = e.target.closest(\"tr\").dataset.todoProject;\n\t\tlet currentTodoTitle = e.target.closest(\"tr\").dataset.todoTitle;\n\n\n\t\tif (currentTodoProject === \"Supermarket\") {\n\t\t\tremoveTodoFromProject(supermarket, currentTodoProject, currentTodoTitle);\n\t\t\tsaveProjectToLocalStorage(\"Supermarket\", supermarket);\n\t\t} else {\n\t\t\tremoveTodoFromProject(myproject, currentTodoProject, currentTodoTitle);\n\t\t\tsaveProjectToLocalStorage(\"My Project\", myproject);\n\t\t}\n\t});\n\n\tfunction removeTodoFromProject(projectName, TodoProject, TodoTitle) {\n\t\tif (projectName.length === 0) {\n\t\t\treturn;\n\t\t}\n\t\tfor (let todo of projectName) {\n\t\t\tif (todo.project === TodoProject && todo.title === TodoTitle) {\n\t\t\t\tlet todoToRemoveIndex = projectName.indexOf(todo);\n\t\t\t\tprojectName.splice(todoToRemoveIndex, 1);\n\t\t\t}\n\t\t}\n\t}\n}\n","\"use strict\";\n\nexport let supermarket = [];\nexport let myproject = [];\n\nimport Todo from \"./todo-constructor.js\";\nimport { addTodo, enableProjectBtns } from \"./btns.js\";\nimport { saveProjectToLocalStorage, reloadLocalStorage } from \"./local-storage.js\";\nimport { addProjectToArray, removeProjectFromArray } from \"./arrays.js\";\nimport { changeProjectTitle, render } from \"./dom.js\";\n\n\naddTodo();\nenableProjectBtns();\nreloadLocalStorage();\nremoveProjectFromArray();\n\n\n\n\n\n\n\n","import Todo from \"./todo-constructor.js\";\nimport { addProjectToArray, removeProjectFromArray } from \"./arrays.js\";\nimport { changeProjectTitle, render } from \"./dom.js\";\nimport { saveProjectToLocalStorage, reloadLocalStorage } from \"./local-storage.js\";\nimport { supermarket, myproject } from \"./index.js\";\n\nexport function addTodo() {\n\tconst btnSubmit = document.getElementById(\"submit-btn\");\n\tconst table = document.getElementById(\"tasks\");\n\n\tbtnSubmit.addEventListener(\"click\", (e) => {\n\t\te.preventDefault();\n\t\tconst project = document.getElementById(\"project\").value;\n\t\tconst title = document.getElementById(\"title\").value;\n\t\tconst description = document.getElementById(\"description\").value;\n\t\tconst dueDate = document.getElementById(\"dueDate\").value;\n\t\tconst priority = document.getElementById(\"priority\").value;\n\n\t\tconst newTodoCreated = new Todo({\n\t\t\tproject: `${project}`,\n\t\t\ttitle: `${title}`,\n\t\t\tdescription: `${description}`,\n\t\t\tdueDate: `${dueDate}`,\n\t\t\tpriority: `${priority}`,\n\t\t});\n\n\t\tif (project.toLowerCase() === \"supermarket\") {\n\t\t\taddProjectToArray(newTodoCreated, supermarket);\n\t\t\trender(supermarket, table);\n\t\t\tchangeProjectTitle(\"Supermarket\");\n\t\t\tsaveProjectToLocalStorage(\"Supermarket\", supermarket);\n\t\t} else {\n\t\t\taddProjectToArray(newTodoCreated, myproject);\n\t\t\trender(myproject, table);\n\t\t\tchangeProjectTitle(\"My Project\");\n\t\t\tsaveProjectToLocalStorage(\"My Project\", myproject);\n\t\t}\n\t});\n}\n\n\n// ProjectBtns event listeners\nexport function enableProjectBtns() {\n\tconst myProjectBtns = document.querySelector(\".project-btns\");\n\n\tmyProjectBtns.addEventListener(\"click\", (e) => {\n\t\tconst table = document.getElementById(\"tasks\");\n\n\t\tif (e.target.textContent.toLowerCase().replace(/\\s/g, \"\") === \"supermarket\") {\n\t\t\trender(supermarket, table);\n\t\t\tchangeProjectTitle(\"Supermarket\");\n\t\t} else {\n\t\t\trender(myproject, table);\n\t\t\tchangeProjectTitle(\"My Project\");\n\t\t}\n\t});\n}"],"names":["$a9500407a82e1f3755c1daa5662600ba$export$default","details","project","title","description","dueDate","priority","this","$63e88c0ac4a17fa749666bda2b72d097$export$saveProjectToLocalStorage","projectName","array","localStorage","setItem","JSON","stringify","$2f8d13c0bbbff3802765a0f3738261a9$export$changeProjectTitle","document","querySelector","innerText","$2f8d13c0bbbff3802765a0f3738261a9$export$render","parentDiv","innerHTML","i","length","priorityClass","row","insertAdjacentHTML","$09c495e21a7976b734a7432180534b5b$export$addProjectToArray","todo","push","supermarket","myproject","btnSubmit","getElementById","table","addEventListener","e","preventDefault","value","newTodoCreated","toLowerCase","target","textContent","replace","defaultTodo","myArraysDistringified","parse","getItem","forEach","element","previousTodos","removeTodoFromProject","TodoProject","TodoTitle","todoToRemoveIndex","indexOf","splice","classList","contains","closest","remove","currentTodoProject","dataset","todoProject","currentTodoTitle","todoTitle"],"version":3,"file":"index.820bb758.js.map"}